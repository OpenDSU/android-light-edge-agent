import java.nio.file.Files

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

task checkSigningFiles(){
    def jksDefaultFilePath = "app/epi.jks.default"
    def jksDefaultFile = project.rootProject.file(jksDefaultFilePath)
    println("Default jksFile path : " + jksDefaultFile.getAbsolutePath())

    def jksFilePath = "app/epi.jks"
    def jksFile = project.rootProject.file(jksFilePath)
    if(!jksFile.exists()){
        println "No signing keystore file found. Creating a default one at : ${jksFilePath} from ${jksDefaultFile}"
        Files.copy(jksDefaultFile.toPath(), jksFile.toPath())

        def signDefaultSettingsFilePath = "app/sign.settings.default"
        def signDefaultSettingsFile = project.rootProject.file(signDefaultSettingsFilePath)
        def signSettingsFilePath = "app/sign.settings"
        def signSettingsFile = project.rootProject.file(signSettingsFilePath)
        if(!signSettingsFile.exists()){
            println "No signing setting file found. Creating a default one at : " + signSettingsFile.getAbsolutePath()
            Files.copy(signDefaultSettingsFile.toPath(), signSettingsFile.toPath())
        }
    }
}

android {
    compileSdkVersion 31
    buildToolsVersion "26.0.3"
    defaultConfig {
        applicationId "eu.pharmaledger.epi"
        minSdkVersion 24
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndkVersion '21.3.6528147'
        ndk {
             abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }

    signingConfigs {
        release {
            checkSigningFiles

            def signSettingsFilePath = "app/sign.settings"
            def signSettingsFile = project.rootProject.file(signSettingsFilePath)
            println "Sign settings file located at: " + signSettingsFile.getAbsolutePath()
            Properties properties = new Properties()
            properties.load(project.rootProject.file(signSettingsFile.getAbsolutePath()).newDataInputStream())
            def storeFileValue = properties.getProperty('storeFile')
            def storePasswordValue = properties.getProperty('storePassword')
            def storeKeyAlias = properties.getProperty('keyAlias')
            def storeKeyPassword = properties.getProperty('keyPassword')

            storeFile file(storeFileValue)
            storePassword storePasswordValue
            keyAlias storeKeyAlias
            keyPassword storeKeyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    // If you want Gradle to package prebuilt native libraries
    // with your APK, modify the default source set configuration
    // to include the directory of your prebuilt .so files as follows.
    sourceSets {
        main {
            jni.srcDirs = [] //disable automatic ndk-build call
            jniLibs.srcDirs = []
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ['*.so'])

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.activity:activity:1.2.4'
    implementation "androidx.fragment:fragment:1.3.4"
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.annotation:annotation:1.4.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation 'com.scottyab:rootbeer-lib:0.1.0'
    implementation 'com.google.code.gson:gson:2.8.7'
    testImplementation 'junit:junit:4.13.1'
}